<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Win】常用技巧</title>
      <link href="/posts/1375e4c7.html"/>
      <url>/posts/1375e4c7.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、文件快速输出MD5码"><a href="#一、文件快速输出MD5码" class="headerlink" title="一、文件快速输出MD5码"></a>一、文件快速输出MD5码</h3><p>在通常，有的时候需要通过文件的MD5去校验两个文件是否一致。在不借助工具的情况下使用Win自带的命令行进行处理对应的文件，输出对应的MD5码</p><ul><li>文件转MD5码<br>命令行：<blockquote><p>certutil -hashfile D:\file.txt  MD5 </p></blockquote></li></ul><p><strong>替换参数</strong><br>D:\file.txt:替换为文件的详细地址<br>注：需要在Win命令行下进行（win+R  –&gt;  cmd)</p>]]></content>
      
      
      <categories>
          
          <category> 常用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用技巧 </tag>
            
            <tag> Win </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Excle】常用技巧</title>
      <link href="/posts/1d3639c7.html"/>
      <url>/posts/1d3639c7.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、时间戳转换"><a href="#一、时间戳转换" class="headerlink" title="一、时间戳转换"></a>一、时间戳转换</h3><p>说明：在日常，我们经常遇到查看分析日志，由于日志中记录的时间常用为时间戳，在进行初步的数据清洗后，为了方便查看，可以通过以下方式将时间戳快速转换为具体的日期。</p><ul><li>1、秒时间戳转换<br>公式：<blockquote><p>=TEXT((A499/1+8<em>3600)/86400+70</em>365+19,”yyyy-mm-dd hh:mm:ss”)</p></blockquote></li></ul><p><strong>替换参数</strong><br>A499:替换为转换的单元格</p><hr><ul><li>2、毫秒时间戳转换<br>公式：<blockquote><p>=TEXT((A499/1000+8<em>3600)/86400+70</em>365+19,”yyyy-mm-dd hh:mm:ss”)</p></blockquote></li></ul><p><strong>替换参数</strong><br>A499:替换为转换的单元格</p>]]></content>
      
      
      <categories>
          
          <category> 常用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用技巧 </tag>
            
            <tag> Excle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】简单音频播放动效</title>
      <link href="/posts/3bbfb648.html"/>
      <url>/posts/3bbfb648.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>动态的展示能够形象的吸引眼球，本次案例制作一个音频播放的动效。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145843.gif" alt="D009-简单的音频播放动效.gif"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li><li>熟悉动态面板。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>基础动态面板应用。</li><li>元件移动衔接。</li><li>移动边界值的判断。</li></ul><h3 id="详细教程"><a href="#详细教程" class="headerlink" title="详细教程"></a>详细教程</h3><blockquote><p>本文以音频播放声纹为展示动，点击播放，声纹向左移动，点击暂停，声纹停止移动，点击删除按钮，声纹停止移动为案例进行逐步讲解。</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>实现音频声纹的播放控制。</p><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><p>1、搭建基础的框架</p><ul><li>音频模拟展示区域（动态面板）</li><li>控制器：两个状态的动态面板，利用动态面板状态切换触发动效。</li><li>播放控制：动态面板，切换播放与暂停。</li><li>其它元件：文字、矩形。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145846.png" alt=""></p><p>2、让音频声纹在局部展示</p><p>利用动态面板的外部只展示局部的属性进行音频声纹的局部展示。</p><ul><li>虚线区域为动态面板可展示区域。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145848.png" alt=""></p><p>3、音频声纹配置展示区域与动效原理</p><ul><li><p>配置</p></li><li><ul><li>准备音频声纹（长度和动态面板可视区域相同）。</li><li>复制音频声纹文件一份，拖动至第一个音频文件尾部，进行收尾连接。</li></ul></li><li><p>动效原理</p></li><li><ul><li>音频声纹、音频声纹-复制同时移动，当音频声纹移动出动态面板区域后，自动移动至原始的音频声纹-复制区域，这样就可以将构成连续的声纹交互。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145851.gif" alt="音频播放原理.gif"></p><p>4、让音频可控的动起来</p><p>利用动态面板的状态改变的交互事件让音频声纹与音频声纹复制按照规律的节奏移动起来。</p><ul><li>点击外部开始动态面板按钮时，设置控制器动态面板按照循环切换下一个进行控制。</li><li>点击暂停时，让控制器的动态面板处于暂停状态。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145853.png" alt=""></p><ul><li>设置控制器动态面板，每切换一次状态，移动音频声纹与音频声纹复制一定的距离。同时给声纹设置最大的移动距离（音频声纹的长度）。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145855.png" alt=""></p><ul><li>同原理图，在音频声纹移动出动态面板区域后，使其移动至原始的音频声纹-复制位置。依次循环。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200829145857.png" alt=""></p><p>5、优化细节</p><ul><li>设置暂停时，控制器动态面板切换为暂停。</li><li>设置删除时，如果音频声纹在模拟播放，将控制器动态面板切换为暂停。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>多重的动态面板嵌套使用，一定要找对对应事件的动态面板（元件命名很重要）</li><li>可以利用移动+动态面板作为触发器实现简单的动效交互。</li><li>本案例也适用于弹幕的样式交互，只需改造对应动态面板的大小与内部文字的位置。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态面板 </tag>
            
            <tag> 动效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】穿梭框案例</title>
      <link href="/posts/ad01d454.html"/>
      <url>/posts/ad01d454.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>穿梭框组件是前端框架中常见的一种数据选择方式，可以动态可视化的展示数据的归属。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212258" alt="穿梭框.gif"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li><li>熟悉中继器。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>选项组：选中效果互斥。</li><li>中继器函数。</li></ul><h3 id="详细教程"><a href="#详细教程" class="headerlink" title="详细教程"></a>详细教程</h3><blockquote><p>本教程源文件提供了通过全局变量传参和局部变量传参的两种方式实现。</p><p>本文以局部变量传参进行实现（相对简单易懂，且方便后期成为组件复用）。</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>可以选择待选区域数据添加至选中区域，同时可将选中区域数据移除（恢复至待选区域）。</p><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><p>1、搭建基础的框架</p><ul><li>中继器两个：</li><li>A：待选数据展示区</li><li>B：选中数据展示区</li><li>添加按钮两个：</li><li>A添加：选中–待选</li><li>B添加：待选–选中</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212302" alt=""></p><p>2、制作A、B中继器赋值。</p><ul><li>A中继器赋值：在中继器的每项加载时，设置中继器中的矩形A的文本为中继器数据列表A中的数据。</li><li>B中继器赋值：在中继器的每项加载时，设置中继器中的矩形B的文本为中继器数据列表B中的数据。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212305" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212308" alt=""></p><p>3、制作双中继器只存在一个选中效果。</p><blockquote><p>选项组：主要用于选中效果的互斥。举例：设置A存在选中效果、B存在选中效果。如果不A、B设置为一个选项组时，A、B均可进行选中。如果设置为选项组时，A、B只能选中一个。</p></blockquote><ul><li>首先进行A、B中继器制作内容选中效果。</li><li>创建选项组，并配置A、B中继器内容为同一选项组。(基于Axure 8举例）</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212311" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212314" alt=""></p><ul><li>选项组设置方式一：选中对应元件，右键选择设置选项组。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212316" alt=""></p><ul><li>选项组设置方式二：选择对应元件，在属性中进行设置。</li><li>若已存在设置的选项组，只需选择即可。</li></ul><p>4、制作单向数据穿梭。</p><ul><li>待选中继器内容点击事件设置。</li><li>设置点击时，清空B存储数据元件。</li><li>同时设置状态为选中。</li><li>采用中继器事件，进行点击行选中</li><li>当前点击的行的数据存储在转换的数据矩形A中。</li><li>同个标题（待选区、选中区域）进行数据集的遮罩。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212319" alt=""></p><ul><li>点击添加（添加 》按钮），进行对应的数据转移。同时删除已标记的行。</li><li>添加判断：A存储值元件文字不为空。当元件文字为空时表示待选区域未选中任何。不会产生添加。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212321" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200819212332" alt="数据变动展示图"></p><p>5、完善反向数据穿梭。</p><ul><li>同样的原理，完成反向选中区域移除效果。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>通过函数进行数据传参。</li><li>灵活应用选项组、局部变量、全局变量。</li><li>双中继器联动。</li></ul><h3 id="链接地址"><a href="#链接地址" class="headerlink" title="链接地址"></a>链接地址</h3><p>案例下载地址：<a href="https://fuzuobiao.com/proview/5ee8d6749d43a65bf3514f19" target="_blank" rel="noopener">https://fuzuobiao.com/proview/5ee8d6749d43a65bf3514f19</a></p><p>案例预览地址：<a href="http://demo.fuzuobiao.com/fzb/5ee8d6749d43a65bf3514f19/start.html" target="_blank" rel="noopener">http://demo.fuzuobiao.com/fzb/5ee8d6749d43a65bf3514f19/start.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中继器 </tag>
            
            <tag> 穿梭框 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】APP首次引导页</title>
      <link href="/posts/93d164df.html"/>
      <url>/posts/93d164df.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>APP更新或用户首次安装APP引导页是必不可少的一部分。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200814003248" alt="引导页"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li><li>熟悉动态面板。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>基础动态面板应用。</li><li>移动边界值的判断。</li></ul><h3 id="详细教程"><a href="#详细教程" class="headerlink" title="详细教程"></a>详细教程</h3><blockquote><p>本文以三页引导页为例，实现引导页的基本功能。</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>打开APP可以通过拖动切换引导页的展示信息。同时支持跳过，最后一个页面跳转登录页面。</p><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><p>1、搭建基础框架</p><ul><li>引导页、首页</li><li>引导页主要由跳过按钮、引导页内容动态面板、滑动条、立即体验按钮组成。</li><li>注意：在制作内容时，如果使用局部图片（如案例）注意排版时尽可能的保证图片在每个界面的位置统一。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200814003303" alt="整体元件组成"></p><p>2、制作左滑动效果和右滑动效果</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200814003316" alt="滑动效果事件"></p><ul><li>由于在Axure中只有动态面板存在拖动的交互触发时间，所以此处需要采用动态面板的这一属性进行实现。</li><li>以左滑为例（动态面板的向左拖动结束交互事件）。</li><li>设置滑动结束后的切换面板状态为下一个即可。</li><li>设置动画为向左滑动，且为500毫秒。这样可以有一个半秒钟的滑动效果。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200814003325" alt="滑动动态面板切换"></p><p>3、制作底部滑动条的效果（以左滑为例）</p><ul><li>原理：每切换一个引导页，滑动条跟随移动固定距离。且左滑动至最后一张再滑动不在向左移动，向右滑动至第一张不在向右移动</li><li>根据原理，可设置每次左滑动移动滑轴50px。同时设置左侧边界可移动区域小于188px。</li></ul><blockquote><p>移动50px原理：由于滑轴的长度为为100px、滑杆的长度为200px。整个滑轴可移动的范围为100px，三个页面移动两次，每次移动50px。</p><p>左侧小于188px原理：滑轴初始状态（未滑动前）的X左侧坐标为88px，移动两次后为188px。为了防止移动超过，设置限制为188px。</p></blockquote><ul><li>右滑也是基于同样的原理。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200814003334" alt="滑轴移动计算"></p><p>4、制作立即体验按钮和滑轴进度的切换展示。</p><ul><li>在第三个引导页后两个中，存在隐藏（显示）滑动条显示（隐藏）立即体验按钮的交互。这里可以采用动态面板的状态改变时的交互事件。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200814003516" alt="处理立即体验按钮展示"></p><ul><li>当添加特定触发条件。切换对应的事件。</li><li>状态改变时，动态面板状态为引导页三，隐藏滑动条，等待200毫秒，显示立即体验。</li><li>等待100毫秒，是为了有一个视觉上的展示显示效果。</li><li>状态改变时，动态面板状态为引导页二，隐藏立即体验，显示滑动条。</li><li>注：一定要处理好显示隐藏的顺序，Axure本质上是按照顺序事件的先后顺序进行处理，不同的顺序处理的顺序不同，展示的效果也不同。</li></ul><p>5、其他细节处理。</p><ul><li>跳过： <ul><li>点击事件：直接打开首页即可。</li><li>鼠标按下事件：设置点击跳过事件为主色，鼠标按下点击时触发器点击效果。</li></ul></li><li>立即体验：<ul><li>点击事件：直接打开首页即可。</li></ul></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>灵活的应用不同元件的交互事件。</li><li>注意交互的先后顺序。</li><li>注意元件的命名。</li></ul><h3 id="链接地址"><a href="#链接地址" class="headerlink" title="链接地址"></a>链接地址</h3><p>案例下载地址：<a href="https://www.fuzuobiao.com/proview/5eef6dd4a87a045d5228a5fa" target="_blank" rel="noopener">https://www.fuzuobiao.com/proview/5eef6dd4a87a045d5228a5fa</a><br>案例预览地址：<a href="http://demo.fuzuobiao.com/fzb/5eef6dd4a87a045d5228a5fa/start.html" target="_blank" rel="noopener">http://demo.fuzuobiao.com/fzb/5eef6dd4a87a045d5228a5fa/start.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 引导页 </tag>
            
            <tag> 动态面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】拖动等级调节</title>
      <link href="/posts/91dff1c4.html"/>
      <url>/posts/91dff1c4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>拖动调节一般在手机端主要用于快速的数值调节，主要用于音量的调节、播放进度调节、亮度调节等</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232223.gif" alt="拖动数值调节.gif"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li><li>熟悉函数知识（获取元件基础属性）。</li><li>熟悉动态面板。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>基础函数应用。</li><li>基础动态面板应用。</li></ul><h3 id="详细教程–-拖动等级调节"><a href="#详细教程–-拖动等级调节" class="headerlink" title="详细教程– 拖动等级调节"></a>详细教程– 拖动等级调节</h3><blockquote><p>本文以简单的基础拖动为例。</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>鼠标点击滑块可自由在滑轴上拖动，并且展示大小等级（共10级）。</p><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><p>1、搭建基础的案例框架。</p><ul><li>注意进度和底色需要高度一致，且左对齐。</li><li>滑块需要涉及动态面板的拖动事件，所以需要制作成动态面板。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232227.png" alt=""></p><p>2、如何实现数值不规则形状</p><ul><li>可以使用钢笔工具调节矩形，或手动绘制。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232231.png" alt=""></p><ul><li>使用矩形然后选择更多形状样式，选择后进行对应的旋转设置。（注意设置调整字体的旋转角度）</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232232.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232234.png" alt=""></p><p>3、如何实现滑块的点击效果</p><ul><li>设置滑块的鼠标按下交互样式，设置线宽为第三个（Axure 9中为数值）。设置线宽颜色为对应的颜色。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232236.png" alt=""></p><p>4、交互效果实现</p><ul><li><p>原理：</p></li><li><ul><li>鼠标按下、松开滑块动态面板，控制数值的展示与隐藏</li><li>鼠标拖动滑块时，数值跟随滑块移动。同时改变进度矩形的宽度与数值的文字（刻度）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232239.png" alt=""></p><ul><li><p>鼠标按下交互设置（鼠标松开效果刚好相反）</p></li><li><ul><li>设置滑块中心位置放大，同时加入动画弹性，减少生硬。</li><li>设置显示数值（数值初始状态为隐藏）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232241.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232242.png" alt=""></p><ul><li>滑块移动时，数值设置跟随</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232244.png" alt=""></p><ul><li><p>拖动时</p></li><li><ul><li>设置滑块的移动区间</li><li>设置进度的宽度：</li></ul></li><li><ul><li><ul><li>滑块的X坐标+滑块的一半-底色的左起点。</li></ul></li></ul></li><li><ul><li>设置数值的结果（通过计算展示对应的等级）</li></ul></li><li><ul><li><ul><li>10/底色的宽*进度的宽，然后取整。</li></ul></li></ul></li></ul><blockquote><p>函数小课堂</p><p>toFixed(0)：取整数。</p><p>toFixed(decimalPoints)：将一个数字转换为保留指定小数位数的数字，超出的后面小数 位将自动进行四舍五入。decimalPoints 为小数点后保留的小数位数。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232248.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232249.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200726232251.png" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>滑块与数值的联动</li><li>巧用形状</li><li>toFixed(0)函数的应用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态面板 </tag>
            
            <tag> 拖动交互 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】加载进度条</title>
      <link href="/posts/c4414abe.html"/>
      <url>/posts/c4414abe.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>加载进度条在PC端的文件上传、下载，APP端的部分进度展示都是不可缺少的一部分。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225903.gif" alt="加载进度条.gif"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 9（或Axure 8）软件已安装。（注：本案例使用Axure 9制作）</li><li>掌握基本的软件使用。</li><li>熟悉函数知识（获取元件基础属性）。</li><li>熟悉动态面板。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>基础函数应用。</li><li>基础动态面板应用。</li></ul><h3 id="详细教程–手机端滚动选择器"><a href="#详细教程–手机端滚动选择器" class="headerlink" title="详细教程–手机端滚动选择器"></a>详细教程–手机端滚动选择器</h3><blockquote><p>本文以手机端APP更新页面下载进度为例，展示基础的加载进度条与下载进度。</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>点击立即更新，展示下载进度条，同时进度条进行进度展示和当前进度百分比展示。</p><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><p>1、搭建基础的案例框架。本案例除加载进度条部分需要设计交互，其它均为静态，只需注意排版布局即可。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225908.png" alt=""></p><p>2、加载进度条部分搭建</p><ul><li><p>思路拆分：加载进度条部分分为立即更新动态面板状态和下载中动态面板状态。点击立即下载，切换至下载中，同时进行对应进度和进度数值的动态展示。</p></li><li><p>创建立即更新动态面板内容：一个矩形</p></li><li><p>创建下载中的动态面板内容：</p></li><li><ul><li>基础部分：进度条、进度值、进度底部背景（but-bg）。</li><li>动效触发部分：计数器（动态面板），通过动态面板的状态改变，去重复变更进度条的宽度和进度值得更像（计数器的动态面板至少两个状态）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225910.png" alt=""></p><p>3、进度条部分的交互</p><ul><li><p>立即更新交互：</p></li><li><ul><li>点击立即更新后，触发切换加载进度条动态面板的状态更新，切换至下载中状态。</li><li>同时触发计数器动态面板向后切换（向后循环）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225912.png" alt=""></p><ul><li><p>下载中的交互</p></li><li><ul><li>进度条的加载展示</li></ul></li><li><ul><li><ul><li>通过计数器的面板状态切换，每切换一次，设置进度条的宽度加十。</li><li>同时设置宽度的变化为一个线性的动画，时间与计数器动态面板切换时间一致为100。保证加载在视觉上展示流畅。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225914.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225916.png" alt=""></p><ul><li><ul><li>进度值的加载展示</li></ul></li><li><ul><li><ul><li>相同的原理，在计数器动态面板切换的时候，计算出进度条宽度与进度底部背景（but-bg）比例值即可。</li><li>如何计算百分比：采用math.ceil(x)函数，计算公司如下：进度 = （进度条宽度 / 进度底部背景（but-bg）） %。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225918.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225919.png" alt=""></p><blockquote><p>函数小课堂：函数说明。</p><ul><li>jdt.width函数：jdt是自定义指定的元件名称（将进度条元件绑定名称为jdt）；.width为某某的宽度。组合起来为进度条的宽度。</li><li>math.ceil(x)函数为向上取整函数，返回大于或等于参数x，并且与之最接近的整数。</li></ul></blockquote><ul><li><ul><li>加载到了100%后，自动停止。</li></ul></li><li><ul><li><ul><li>添加状态改变是的情形编辑，让进度条宽度小于进度底部背景（but-bg）宽度，动态面板切换进行上两步交互的执行（进度条的加载展示、进度值的加载展示）。不满足时，不再进行。</li><li>当进度条宽度等于进度底部背景（but-bg）宽度，设置最终的进度值为100%。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225922.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225923.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200724225925.png" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>动态面板的切换作为一个中间件，触发部分需要频繁更新的元件。</li><li>函数基本上包含了常用的计算方式，随用随查。</li><li>多种交互情形一定要注意先后的顺序，Axure一般按照从上到下的顺序执行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进度条 </tag>
            
            <tag> 下载更新进度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】手机端滚动选择器</title>
      <link href="/posts/e5f548c6.html"/>
      <url>/posts/e5f548c6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>滑动选择器在手机端是一个比较常见的组件，主要用于多数据情况下的选择。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723200957.gif" alt="手机端滚动选择器.gif"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li><li>掌握基础的动态面板知识。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>进阶的动态面板使用。</li><li>基础函数应用。</li><li>基础中继器应用。</li></ul><h3 id="详细教程–手机端滚动选择器"><a href="#详细教程–手机端滚动选择器" class="headerlink" title="详细教程–手机端滚动选择器"></a>详细教程–手机端滚动选择器</h3><blockquote><p>本文以基础的单一选择为例（多选择可以将滑动区域、数据集模块进行复制，调整滑动区域、数据集宽度即可）。</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>鼠标拖动滑轮进行数据选择，滑动结束后，选中数据居中。</p><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><p>1、制作基础的静态模块（注意元件命名，本案例涉及局部变量关联元件，元件命名有利于查找对应元件）。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201000.png" alt=" "></p><p>2、制作上遮盖、选中、下遮盖。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201002.png" alt=" "></p><ul><li>上遮盖、下遮盖制作了一个模糊的效果，实际制作为对应的矩形，填充渐变色（#FFFFFF（50%）–#FFFFFF（100%）），注意设置对应的角度，下遮盖为-90°，上遮盖为90°。（图以上遮盖为例，选中渐变左侧。）</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201004.png" alt=" "></p><ul><li>选中效果：设置选中为对应的纯色矩形即可。（设置颜色主要是与背景有所区分，颜色可选APP主色或其它与背景有对比度的颜色）。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201006.png" alt=" "></p><p>3、制作数据集数据（中继器基础）。</p><ul><li>绘图区域拖入中继器组件</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201007.png" alt=" "></p><ul><li><p>修改中继器组件内部为文本标签元件，调整字体元件的宽（375px）、高（35px），文本标签元件字体设置对齐为左右居中，上下居中。</p></li><li><ul><li>默认中继器中是一个矩形可以手动删除后拖入文本标签元件。</li><li>技巧：矩形快速变为文本标签元件：移除矩形背景色、移除矩形描边即可。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201010.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201011.png" alt=" "></p><ul><li><p>配置中继器数据关联</p></li><li><ul><li>设置每项加载时，文字为中继器对应list列表数据。</li><li>list：中继器表头，自行修改（注：中继器表头目前不支持中文）。</li><li>list数据：自行填写（此处数据为滚动选择器中的数据，可自行进行填写，目前需大于等于7。）</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201014.png" alt=" "></p><ul><li>交互整体原理</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201017.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201019.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201021.png" alt=" "></p><ul><li><p>配置滑动交互</p></li><li><ul><li>实现原理：整个滑动交互分为两层。</li></ul></li><li><ul><li><ul><li>第一层：用户鼠标拖动滑动区域动态面板移动后，数据集动态面板跟随移动。</li><li>第二层：当滑动区域移动结束后，计算出滑动的数据距离，给数据集动态面板进行计算并进行上下对应调整（保证文案居中）。</li></ul></li></ul></li><li><ul><li>滑动区域高度计算：滑动区域比数据集区域高6个数据高度（取决于显示滑动区域多少）。</li></ul></li><li><ul><li><ul><li>所有可以在载入是计算滑块区域的高度：滑块区域高度=中继器数据个数<em>35+额外高出的高度（6</em>35）。</li></ul></li></ul></li></ul><blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201036.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201040.png" alt=" "></p></blockquote><ul><li><p>配置滑动区域交互</p></li><li><ul><li>配置滑动区域可拖动的范围</li><li>按照滑块区域顶部为依据，设置顶部可移动区域为:[-滑块高度+245（7个滑动展示区域），0]。计算依据参考整体交互原理。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201144.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201146.png" alt=" "></p><ul><li><p>配置数据移动区域与展示</p></li><li><ul><li>设置数据集跟随滑动区域移动</li><li>计算出滑动区域移动后，数据集需要移动多少进行最后结果的调整。</li></ul></li><li><ul><li><ul><li>计算方式：滑动区域移动的距离取除35（单个数据高度）余数的整。然后进行乘35。</li></ul></li></ul></li><li><ul><li>然后将数据区域约束在对应的滚动区域中。计算依据参考整体交互原理。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201149.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201151.png" alt=" "></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723201152.png" alt=" "></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>过程相对较为复杂，如果只是日常使用，下载对应源文件更改数据即可。</p></li><li><p>如果自行学习注意以下几个交互</p></li><li><ul><li>注意滑动区域计算与数据集跟随计算。</li><li>可以使用文本赋值展示交互的实际值进行修改对应的逻辑。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态面板 </tag>
            
            <tag> 手机常用组件 </tag>
            
            <tag> 中继器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】上下滚动切换案例</title>
      <link href="/posts/5793d7f2.html"/>
      <url>/posts/5793d7f2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>上下滚动切换是APP中常见的交互之一，通过动态的交互，能够更好的引导用户的视觉。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723200818.gif" alt="上下滚动切换.gif"></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>初级的动态面板使用。</li><li>矩形、文字元件。</li></ul><h3 id="详细教程–上下滚动切换"><a href="#详细教程–上下滚动切换" class="headerlink" title="详细教程–上下滚动切换"></a>详细教程–上下滚动切换</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>界面加载后，内容进行上下滚动交互切换。</li></ul><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><blockquote><p>本文以搜索栏提示的上下滚动为示例。做两种状态的切换。</p></blockquote><p>1、制作基础切换内容（本质为动态面板）。创建两个动态面板状态。</p><p>2、制作填充动态面板状态内容。</p><ul><li>制作辅助样式。若需要交互，使用鼠标单击事件。</li></ul><p>3、制作上下滚动内容。</p><ul><li>新建动态面板。</li><li>动态面板内容填充为文字，编辑文案。</li><li>复制动态面板状态，修改复制后的文案。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723200823.png" alt=""></p><ul><li><p>设置交互事件：页面载入时</p></li><li><ul><li>设置动态面板向后循环。</li><li>设置间隔3000（1s==1000）。</li><li>设置进入、退出动画为向上滑动，时间500（这样就能实现向上切换的效果）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200723200825.png" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>动态面板其实可以实现比较多的简单交互。主要通过动画的设置。</li><li>上下滑动切换其实使用场景相对较多，例如案例的搜索栏、部分滚动的资讯等等。</li><li>可以制作一定规范的小交互封装成元件库，比如此次我采用的就是375宽的制作，下次复用直接复制至对应手机原型的位置即可。只需配置页面载入交互和文案。</li></ul><h3 id="链接地址"><a href="#链接地址" class="headerlink" title="链接地址"></a>链接地址</h3><p>案例下载地址：<a href="https://www.fuzuobiao.com/proview/5f15c17c1fcc636bd02816a6" target="_blank" rel="noopener">https://www.fuzuobiao.com/proview/5f15c17c1fcc636bd02816a6</a></p><p>案例预览地址：<a href="http://demo.fuzuobiao.com/fzb/5f15c17c1fcc636bd02816a6/start.html" target="_blank" rel="noopener">http://demo.fuzuobiao.com/fzb/5f15c17c1fcc636bd02816a6/start.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态面板 </tag>
            
            <tag> 手机常用组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】进阶轮播图</title>
      <link href="/posts/a24adc22.html"/>
      <url>/posts/a24adc22.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>上一篇文章给大家介绍了基础的轮播制作，适合于大部分，今天带领大家实现进阶的轮播图实现效果。例如轮播进度指示、快速跳转、鼠标移入暂停轮播等等</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li><p>初级的动态面板使用。</p></li><li><p>初级的页面交互事件、元件交互事件使用。</p></li><li><ul><li>鼠标移入移除</li><li>动态面板状态切换</li></ul></li><li><p>图片元件、矩形、SVG图标等元件使用。</p></li></ul><h3 id="详细教程–基础轮播图"><a href="#详细教程–基础轮播图" class="headerlink" title="详细教程–基础轮播图"></a>详细教程–基础轮播图</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>鼠标移入暂停轮播、鼠标移除继续轮播。</li><li>点击切换上一张轮播图、点击切换下一张轮播图。</li><li>轮播图与小标同步、小标点击跳转。</li></ul><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><blockquote><p>以三张轮播为例，使用Axure 8为例。</p><p>进阶轮播图主要为了适配PC端的操作，加入了指定的轮播图页面切换；鼠标移动停止轮播，移出继续轮播；手动切换上下轮播图。</p></blockquote><p>1、制作基础的轮播图（详细教程可查看上一篇文章：<a href="http://pmyx.top/posts/2233107e.html">文章地址</a>。）</p><p>2、制作同等动态页面状态的轮播图小标，结合内容轮播图的顺序给每个状态制作进度排序，使其轮播图小标的状态与内容轮播图页面一一匹配。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225804.png" alt=""></p><p>3、制作左右切换的按钮。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225807.png" alt=""></p><ul><li>可以通过形状+SVG图标实现。</li><li>透明状态实现：填充形状为纯色（纯白：#FFFFFF），设置透明度为：30%。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225809.png" alt=""></p><p>4、交互制作</p><ul><li><p>轮播图同步动起来：内容轮播图页面切换+右下部小标切换。</p></li><li><ul><li>在页面层级配置页面载入的动态面版的交互（注：需要同时配置两个动态面板交互）。</li><li>选择两个动态面板模式：向后循环（Next）。</li><li>同时勾选两个动态面板向后循环（若未勾选向后循环，动态面板只会切换一个状态）。</li><li>同时勾选循环间隔时间（系统默认1000毫秒（1秒=1000毫秒），日常中基本设置为3000–5000之间）。</li><li>同时勾引首个状态延时（勾选后，第一张轮播展示对应时间后，才会进行加载第二张；若不勾选，第一张会一闪而过）。</li><li>动画：缓解动态版本切换的生硬。</li></ul></li><li><ul><li><ul><li>动画只需在内容动态面板上配置，小标动态面板无需配置。</li><li>方向：根据实际效果选择（一般常用向左滑动）；</li><li>时间：动画过渡时间，同样是缓解切换的生硬效果。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225811.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225813.png" alt=""></p><ul><li><p>设置小标点击后跳转对应的页面。</p></li><li><ul><li>每个状态的小标中的按钮都需要添加交互事件。</li><li>设置状态需同步（注：点击第一个，切换小标为小标1、切换内容轮播图为轮播图状态1）。</li></ul></li><li><ul><li>技巧：统一制作一个小标状态，然后进行复制，复制后对应的调整小标内容的排版布局，这样就可以保证整个交互不会错乱和丢失。（如果采用每个页面单独制作交互，就需要注意，当轮播图状态越多，制作小标的交互需要更细心。）</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225816.png" alt=""></p><ul><li><p>设置左右按钮点击切换（以左切换为例）。</p></li><li><ul><li>设置按钮点击事件</li><li>点击后切换内容动态面板、小标为上一个。</li><li>向前循环：勾选向前循环（若不勾选向前循环，在动态面板切换至第一个后，将无法再次向前切换）。（注：右按钮为向后循环勾选）。</li><li>注：Next（下一个）、Previous（上一个）。</li><li>配置完成点击事件后，进行左右切换其实状态的隐藏展示（设置隐藏状态，只在鼠标移入轮播图后进行展示切换按钮）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225818.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225819.png" alt=""></p><ul><li><p>配置鼠标移除轮播图暂停、鼠标移出轮播图继续</p></li><li><ul><li>鼠标移入，设置内容轮播图和小标轮播图状态为停止循环。</li><li>鼠标移入，设置左右切换按钮为显示。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225832.png" alt=""></p><ul><li><ul><li>鼠标移出，设置内容轮播图和小标轮播图状态为向后循环（配置通页面的轮播图动起来）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225835.png" alt=""></p><ul><li><p>隐藏左右按钮</p></li><li><ul><li>设置当动态面板变化时，隐藏左右按钮（添加触发条件，当指针未接触内容轮播图（简单理解就是鼠标移出内容轮播图））。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225837.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225841.png" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>注意交互的先后顺序。尤其在鼠标移入移出内容轮播图时。</li><li>遇到交互冲突，可以尝试添加触发条件进行避免冲突。</li><li>注意细节，尤其是小标动态面板的交互。</li><li>最后一点：老生常谈，注意命名（高保真想要做的好，命名不可少）。</li></ul><p>案例下载地址：<a href="https://fuzuobiao.com/proview/5ef0a04cc9fc8023a0af228a" target="_blank" rel="noopener">https://fuzuobiao.com/proview/5ef0a04cc9fc8023a0af228a</a></p><p>案例预览地址：<a href="http://demo.fuzuobiao.com/fzb/5ef0a04cc9fc8023a0af228a/start.html" target="_blank" rel="noopener">http://demo.fuzuobiao.com/fzb/5ef0a04cc9fc8023a0af228a/start.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 轮播图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【Axure入门案例系列】基础轮播图</title>
      <link href="/posts/2233107e.html"/>
      <url>/posts/2233107e.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>轮播图在手机端和PC网页官网、H5页面是比较常见的组件，今天带领大家一步步实现基础轮播图的效果。同时进行轮播图相关的扩展进行说明。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>Axure 8（或Axure 9）软件已安装。</li><li>掌握基本的软件使用。</li></ul><h3 id="本教程知识点"><a href="#本教程知识点" class="headerlink" title="本教程知识点"></a>本教程知识点</h3><ul><li>初级的动态面板使用。</li><li>初级的页面交互事件、元件交互事件使用。</li><li>图片元件、矩形等元件使用。</li></ul><h3 id="详细教程–基础轮播图"><a href="#详细教程–基础轮播图" class="headerlink" title="详细教程–基础轮播图"></a>详细教程–基础轮播图</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>自动滚动：页面载入交互</li><li>点击跳转：元件单击交互</li></ul><h4 id="制作方式"><a href="#制作方式" class="headerlink" title="制作方式"></a>制作方式</h4><blockquote><p>以三张轮播为例，使用Axure 8为例。</p></blockquote><p>1、在元件库中拖入动态面板于绘图区域。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225721.png" alt=""></p><p>2、创建三个轮播图状态。（注意编辑时的命名）。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225725.png" alt=""></p><p>3、进行轮播图内容的配置，需要在三个轮播图状态中进行单独配置每个状态的内容。</p><ul><li>如果轮播图是已经处理好的图片，可以将每个状态的图片直接拖入动态面板对应的状态中。</li><li>如果轮播图是单独采用Axure中元件进行制作，就需要每个状态进行对应的动态面板内容编辑。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225728.png" alt=""></p><p>4、进行轮播图交互配置</p><ul><li><p>轮播图动起来：在页面层级配置页面载入的动态面版的交互。</p></li><li><ul><li>选择动态面板模式：向后循环（Next）。</li><li>勾选向后循环（若未勾选向后循环，动态面板只会切换一个状态）。</li><li>勾选循环间隔时间（系统默认1000毫秒（1秒=1000毫秒），日常中基本设置为3000–5000之间）。</li><li>勾引首个状态延时（勾选后，第一张轮播展示对应时间后，才会进行加载第二张；若不勾选，第一张会一闪而过）。</li><li>动画：缓解动态版本切换的生硬。</li></ul></li><li><ul><li><ul><li>方向：根据实际效果选择（一般常用向左滑动）；</li><li>时间：动画过渡时间，同样是缓解切换的生硬效果。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225732.png" alt=""></p><ul><li><p>配置轮播图跳转：对动态面版中每个状态进行跳转设置（常用交互为鼠标单击）。</p></li><li><ul><li>打开原型内部页面只需链接对应的页面即可。</li><li>打开原型外部链接可以进行Url进行配置。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200719225734.png" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>基础的轮播图只需要以上步骤进行配置达到交互效果。以下为经验与注意事项。</p><ul><li>如果用预制图片，图片请保持尺寸一致（同时保证动态面板尺寸与图片一致，这样能够达到更好的效果）。</li><li>间隔时间结合所需进行设置，一般建议3s–5s之间。</li><li>动态面板状态的顺序是预览是轮播开始的顺序，可以调整动态面板状态的先后，展示对应的顺序（注：面板状态的顺序可以通过拖动调整先后顺序）。</li><li>注意元件和动态面板、动态面板状态的名称备注（方便后期快速检索）。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Axure入门案例系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 轮播图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用模块化的思维设计元件库</title>
      <link href="/posts/9bb01e64.html"/>
      <url>/posts/9bb01e64.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axure </tag>
            
            <tag> 元件库 </tag>
            
            <tag> 经验总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0-1的应用APP Store上架的故事</title>
      <link href="/posts/87bea7cf.html"/>
      <url>/posts/87bea7cf.html</url>
      
        <content type="html"><![CDATA[<h3 id="上架前准备"><a href="#上架前准备" class="headerlink" title="上架前准备"></a>上架前准备</h3><ul><li><p>对应应用市场的账户（企业应用需要企业账号）</p></li><li><p>基础材料准备</p></li><li><ul><li>名称：应用名称</li><li>logo</li><li>副标题</li><li>隐私政策网址</li></ul></li><li><p>APP相关材料准备</p></li><li><ul><li>应用市场预览图</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200622000331.png" alt="基础类型"></p><ul><li><ul><li>宣传文本</li><li>关键词</li><li>技术支持网址</li><li>营销网址</li><li>描述</li><li>版权</li></ul></li><li><p>账号相关信息</p></li><li><ul><li>如果涉及登录，需要提供登录的测试账号。</li><li>联系人</li></ul></li><li><ul><li><ul><li>电话</li><li>邮箱</li><li>姓名</li></ul></li></ul></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="账号校验："><a href="#账号校验：" class="headerlink" title="账号校验："></a>账号校验：</h4><p>APP涉及登录时，提交审核前确然对应账号可以进行登录操作。同时在审核期间，不要对账号进行更改密码、冻结、删除等操作。</p><h4 id="支付说明："><a href="#支付说明：" class="headerlink" title="支付说明："></a>支付说明：</h4><p>如果应用涉及三方支付时（非虚拟商品），此时未接入苹果支付，需要对支付（业务逻辑进行备注说明）。</p><blockquote><p>如果没有说明，业务不是很明显，会被拒，被拒原因就是认为你的是虚拟商品，需接入苹果支付，苹果扣除30%。</p></blockquote><h4 id="使用无障碍"><a href="#使用无障碍" class="headerlink" title="使用无障碍"></a>使用无障碍</h4><p>涉及到第三方的调用时，首先确认是否存在打断应用使用的过程。</p><ul><li><p>举例：微信登录，</p></li><li><ul><li>场景：APP涉及微信登录时，手机未安装微信登录，点击后会提示用户下载微信等，这种是会被审核拒绝的。</li><li>处理方案：在APP中进行对应的逻辑判断，若用户手机无微信，隐藏对应的微信登录。</li></ul></li></ul><p>常见的打断点：三方登录、三方支付等等。</p>]]></content>
      
      
      <categories>
          
          <category> 0-1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产品发布 </tag>
            
            <tag> APP Store上架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【中继器系列教程】第四步：九宫格图片</title>
      <link href="/posts/b0aeba52.html"/>
      <url>/posts/b0aeba52.html</url>
      
        <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ul><li>电脑：mac和win都可以（案例以win系统为例，mac类似）。</li><li>软件：Axure 9 系列（Axure 8类似）。</li><li>熟练程度：中级（元件使用，函数调用）。</li><li>相关使用元件：矩形、文本、SVG（形状）图标、动态面板、图片、中继器。</li></ul><h3 id="演示动图"><a href="#演示动图" class="headerlink" title="演示动图"></a>演示动图</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606130911.gif" alt="演示Gif图"></p><h3 id="原型元件组成展示"><a href="#原型元件组成展示" class="headerlink" title="原型元件组成展示"></a>原型元件组成展示</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606130925.png" alt="元件组成部分截图"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="正文（制作过程）"><a href="#正文（制作过程）" class="headerlink" title="正文（制作过程）"></a>正文（制作过程）</h3><h4 id="制作思路"><a href="#制作思路" class="headerlink" title="制作思路"></a>制作思路</h4><p>整个发布动态的九宫格图片由两个页面组成，在每个页面中各自存在一个中继器，进行数据的存储。通过中继器的函数进行数据的传递，达到选中展示的效果。</p><p>注：由于中继器函数需要在同一页面中继器中使用，所以需要将两个页面放置于同一画布。通过显示隐藏的交互达到切换的效果。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606130933.png" alt="组成说明.png"></p><h4 id="简单原型"><a href="#简单原型" class="headerlink" title="简单原型"></a>简单原型</h4><p>在整个交互逻辑中，最重要的一步就是中继器之间的交互传值。下面详细介绍之间的交互逻辑。</p><p>第一步：创建两个中继器。（展示中继器：用于后期九宫格的展示。选项中继器：模拟手机图片库）。</p><p>第二步：修改中继器内部内容为图片元件对应命名为展示图片、选项图片。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606130955.png" alt="简单原型"></p><p>第三步：给选项中继器进行图片配置。</p><p>①配置交互事件，每项加载时设置选项图片为中继器中导入的对应图片。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606130957.png" alt="配置交互事件"></p><p>②进行中继器图片的导入(在中继器对应数据栏右键选择导入图片选项）。导入完成后，可以看到对应的中继器中已经加载对应的图片。</p><p>注：为了界面展示美观，图片使用应该是相同等比的图片。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606131018.png" alt="图片导入"></p><p>第四步：设置选项中继器的交互。通过点击选项中继器，进行对应图片传递给展示中继器。</p><p>①：配置图片单击交互事件，添加展示中继器行。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606131052.png" alt=""></p><p>②：点击添加行，配置对应数据。（注意：只需要添加一行）</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606131055.png" alt=""></p><p>③：配置参数，选择当前中继器的参数。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606131058.png" alt=""></p><p>④：点击预览，查看对应效果。</p><p>注：</p><p>1、只能通过预览查看对应效果。</p><p>2、如果展示图片有三张没有加载出来，就是因为没有在预览前清空预览中继器。</p><p>⑤：此时已经完成了整个的核心逻辑。下面部分简单讲述下后续细节优化的思路，有不太清楚的小伙伴可以在文章下留言，或关注公众号获取源文件。</p><h4 id="细节优化"><a href="#细节优化" class="headerlink" title="细节优化"></a>细节优化</h4><h5 id="如何设置展示中继器的加号"><a href="#如何设置展示中继器的加号" class="headerlink" title="如何设置展示中继器的加号"></a>如何设置展示中继器的加号</h5><p>思路：设置一张加号的图片，通过判断其中继器数据来控制期其隐藏。</p><h5 id="如何设置图片超过9张的数字"><a href="#如何设置图片超过9张的数字" class="headerlink" title="如何设置图片超过9张的数字"></a>如何设置图片超过9张的数字</h5><p>思路：首先设置文本，当展示中继器的数据大于9条时，通过展示中继器条数-9的差值</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606131108.png" alt="超过9张隐藏"></p><h3 id="如何设置一张图片、两张图片展示效果"><a href="#如何设置一张图片、两张图片展示效果" class="headerlink" title="如何设置一张图片、两张图片展示效果"></a>如何设置一张图片、两张图片展示效果</h3><p>思路：同样获取中继器的数据，根据数据，改变原有的内部图片的尺寸。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200606131207.png" alt="配置不同图片的展示效果"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>主要是中继器的联动赋值。</p>]]></content>
      
      
      <categories>
          
          <category> 中继器教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中继器 </tag>
            
            <tag> Axure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【中继器系列教程】第三步：时间函数搭配中继器倒计时组件</title>
      <link href="/posts/56f4db21.html"/>
      <url>/posts/56f4db21.html</url>
      
        <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ul><li>电脑：mac和win都可以（案例以win系统为例，mac类似）。</li><li>软件：Axure 8 系列。</li><li>熟练程度：中级（元件使用，函数调用）。</li><li>相关使用元件：矩形、文本、中继器、动态面板。</li></ul><h3 id="演示动图"><a href="#演示动图" class="headerlink" title="演示动图"></a>演示动图</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232717.gif" alt="演示Gif图"></p><h3 id="原型元件组成展示"><a href="#原型元件组成展示" class="headerlink" title="原型元件组成展示"></a>原型元件组成展示</h3><blockquote><p>注：本套教程共四个元件（分秒正计时、分秒倒计时、时分秒正计时、时分秒倒计时）加一个彩蛋（获取本机时间，开始24小时倒计时）。</p><p>以下以分秒计时为元件组成为例截图。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232721.png" alt="元件组成部分截图"></p><h3 id="正文（制作过程）"><a href="#正文（制作过程）" class="headerlink" title="正文（制作过程）"></a>正文（制作过程）</h3><blockquote><p>举例正计时（分、秒）与倒计时（时、分、秒）的制作方式（还有彩蛋的制作思路，哈哈）。</p></blockquote><h4 id="正计时（分、秒）"><a href="#正计时（分、秒）" class="headerlink" title="正计时（分、秒）"></a>正计时（分、秒）</h4><p><strong>步骤分解</strong></p><ul><li>创建中继器，只保留中继器数据一行。创建数据集合。</li></ul><table><thead><tr><th>名称</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>Start_min</td><td>计时开始的时间分</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr><tr><td>Start_s</td><td>计时开始的时间秒</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr><tr><td>End_min</td><td>计时结束的时间分</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr><tr><td>End_s</td><td>计时结束的时间秒</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr></tbody></table><ul><li><p>根据时间的格式，创建时间显示样式。</p></li><li><ul><li>方式一：文本（分）、文本（秒）、矩形（ ：）。</li></ul></li></ul><p>【注：优势：底层的矩形有占位空间，并且方便更改背景颜色。案例采用本方式】</p><ul><li><ul><li>方式二：文本（分）、文本（秒）、文本（ ：）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232731.png" alt=""></p><ul><li><p>创建动态面板。</p></li><li><ul><li>作用：通过动态面板的循环进行时间计数的触发。  </li></ul></li><li><ul><li><ul><li>交互事件：状态改变时。</li></ul></li></ul></li><li><ul><li>方式：创建两个动态面板状态（命名：一、二）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232738.png" alt=""></p><ul><li><p>创建交互逻辑</p></li><li><ul><li>数据赋值逻辑</li></ul></li><li><ul><li><ul><li>进行开始时间通过中继器的<strong>每项加载时</strong>赋值给展示的文本（分）和文本（秒）。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232742.png" alt=""></p><ul><li><ul><li><ul><li>进行结束时间的赋值（结束状态在条件中，此处赋值为赋值给结束条件）。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232744.png" alt=""></p><ul><li><ul><li>进行动态面板的切换触发交互。</li></ul></li><li><ul><li><ul><li>创建<strong>启动</strong>按钮。</li><li>给启动按钮配置鼠标单击事件。鼠标单击时进行动态面板的向后循环(Next)，设置循环间隔1000（1000的时间长度为1秒）同时设置首个状态延时。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232747.png" alt=""></p><ul><li><p>进行数据变化（计时展示）的交互。</p></li><li><ul><li>考虑边界值转换情况。当秒钟计时到59时，下一个展示为00。于是进行状态的交互时间中做状态的划分。</li><li>当每次动态面板状态变化时，给秒的文本值进行加一。</li><li>当秒文本值为59时，进行分的文本值加一同时，同时将秒的文本值重置为00。</li><li>注：%为除以某数后取余。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232749.png" alt=""></p><ul><li><p>数值优化交互。</p></li><li><ul><li>为了符合时间的展示效果，当时间为个位数的时候进行前补充0的操作。</li><li>使用的函数：①：concat(‘string’)，② ：slice(start,end)。</li></ul></li></ul><blockquote><p>①： concat(‘string’) ；<br>⽤途：将当前⽂本对象与另⼀个字符串组合。</p><p>参数：string为组合在后⽅的字符串。</p><p>②：slice(start,end) ；<br>⽤途：从当前⽂本对象中截取从指定起始位置 开始到终⽌位置之前的字符串。</p><p>参数：start为被截取部分的 起始位置，该数值可为负数；end为被截取部分的终⽌位置， 该数值可为负数。该参数可省略，省略该参数则由起始位置 截取⾄⽂本对象结尾。</p></blockquote><p><strong>倒计时（分、秒），调整正计时（分、秒）的【**</strong>进行数据变化（计时展示）的交互<strong>**】部分的交互即可。</strong></p><h4 id="倒计时（时、分、秒）"><a href="#倒计时（时、分、秒）" class="headerlink" title="倒计时（时、分、秒）"></a>倒计时（时、分、秒）</h4><p><strong>步骤分解</strong></p><ul><li>创建中继器，只保留中继器数据一行。创建数据集合。</li></ul><table><thead><tr><th>名称</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>Start_h</td><td>计时开始的时间小时</td><td>设定时间请范围00-23（请按照24进制的设置方式）</td></tr><tr><td>Start_min</td><td>计时开始的时间分</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr><tr><td>Start_s</td><td>计时开始的时间秒</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr><tr><td>End_h</td><td>计时开始的时间小时</td><td>设定时间请范围00-23（请按照24进制的设置方式）</td></tr><tr><td>End_min</td><td>计时结束的时间分</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr><tr><td>End_s</td><td>计时结束的时间秒</td><td>设定时间请范围00-59（请按照60进制的设置方式）</td></tr></tbody></table><ul><li><p>根据时间的格式，创建时间显示样式。</p></li><li><ul><li>备注文本：文本（时）、文本（分）、文本（秒）、矩形（BG）。</li><li>展示文本：文本（H）、文本（M）、文本（S）。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232753.png" alt=""></p><ul><li><p>创建动态面板。</p></li><li><ul><li>作用：通过动态面板的循环进行时间计数的触发。  </li></ul></li><li><ul><li><ul><li>交互事件：状态改变时。</li></ul></li></ul></li><li><ul><li>方式：创建两个动态面板状态（命名：一、二）。</li><li>创建中间桥（本次使用数据传值的方式进行倒计时的制作）。</li></ul></li></ul><blockquote><p>数据传值：通过将中继器中的数据进行组合，计算出一个转换为秒的时间整数。然后通过数据的取余进行计算出展示的时、分、秒。</p><p>计算公式：（小时<em>3600+分钟</em>60+秒）</p><p>实际计算赋值</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232755.png" alt=""></p></blockquote><ul><li><p>创建交互逻辑</p></li><li><ul><li>数据赋值逻辑</li></ul></li><li><ul><li><ul><li>进行开始时间通过中继器的<strong>每项加载时</strong>赋值给展示的文本（H）、文本（M）和文本（S）。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232758.png" alt=""></p><ul><li><ul><li><ul><li>进行结束时间的赋值（结束状态在条件中，此处赋值为赋值给结束条件）。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232800.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232802.png" alt=""></p><ul><li><ul><li>进行动态面板的切换触发交互。</li></ul></li><li><ul><li><ul><li>创建<strong>启动</strong>按钮。</li><li>给启动按钮配置鼠标单击事件。鼠标单击时进行动态面板的向后循环(Next)，设置循环间隔1000（1000的时间长度为1秒）同时设置首个状态延时。</li><li>进行中间桥的数值计算。</li></ul></li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232805.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232808.png" alt=""></p><ul><li><p>进行数据变化（计时展示）的交互。</p></li><li><ul><li>进行秒、分、时的反向计算。通过中间桥的数值，进行计算。</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232811.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232813.png" alt=""></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232849.png" alt=""></p><ul><li><p>数值优化交互。</p></li><li><ul><li>为了符合时间的展示效果，当时间为个位数的时候进行前补充0的操作。</li><li>使用的函数：①：concat(‘string’)；② ：slice(start,end)；③：Math.floor(x)。 </li></ul></li></ul><blockquote><p>①： concat(‘string’) ：</p><p>⽤途：将当前⽂本对象与另⼀个字符串组合。</p><p>参数：string为组合在后⽅的字符串。</p><p>②：slice(start,end) ：</p><p>⽤途：从当前⽂本对象中截取从指定起始位置 开始到终⽌位置之前的字符串。</p><p>参数：start为被截取部分的 起始位置，该数值可为负数；end为被截取部分的终⽌位置， 该数值可为负数。该参数可省略，省略该参数则由起始位置 截取⾄⽂本对象结尾。</p><p>③：Math.floor(x)： </p><p>⽤途：向下取整函数，获取⼩于或者等于指定数 值的⼤整数。</p><p>参数：x为数值</p></blockquote><p><strong>正计时（时、分、秒），调整上述案例的【**</strong>进行数据变化（计时展示）的交互<strong>**】部分的交互即可。</strong></p><h3 id="彩蛋篇-获取本机时间，开始24小时倒计时"><a href="#彩蛋篇-获取本机时间，开始24小时倒计时" class="headerlink" title="彩蛋篇:获取本机时间，开始24小时倒计时"></a>彩蛋篇:获取本机时间，开始24小时倒计时</h3><p>思路：</p><ul><li><p>点击触发事件后，获取电脑本地的时间。通过分别获取电脑本地的时、分、秒，进行计算剩余时间。</p></li><li><ul><li>小时通过23减去当前的小时时间。</li><li>分钟通过59减去当前的分钟时间。</li><li>秒钟通过59减去当前的秒钟时间。</li></ul></li><li><p>将剩余时间转换为中间桥的具体秒数。（参考倒计时（时、分、秒））。</p></li><li><p>设置结束时间为00（时、分、秒都为00）。</p></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605232826.png" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>主要函数计算、动态面板改变的交互事件、时间函数获取。</p>]]></content>
      
      
      <categories>
          
          <category> 中继器教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中继器 </tag>
            
            <tag> Axure </tag>
            
            <tag> 时间组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【中继器系列教程】第二步：高级查找（下拉菜单教程）</title>
      <link href="/posts/d32ee94f.html"/>
      <url>/posts/d32ee94f.html</url>
      
        <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ul><li>电脑：mac和win都可以（案例以win系统为例，mac类似）</li><li>软件：Axure 8系列</li><li>熟练程度：中级（元件使用，函数调用）</li><li>相关使用元件：矩形、<strong>中继器</strong>、<strong>动态面板</strong>、文本框。</li></ul><h3 id="演示动图"><a href="#演示动图" class="headerlink" title="演示动图"></a>演示动图</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200620162937.gif" alt="演示Gif图"></p><h3 id="原型元件组成展示"><a href="#原型元件组成展示" class="headerlink" title="原型元件组成展示"></a>原型元件组成展示</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230611.png" alt="元件组成部分截图"></p><h3 id="正文（制作过程）"><a href="#正文（制作过程）" class="headerlink" title="正文（制作过程）"></a>正文（制作过程）</h3><h4 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h4><p><strong>直接选择类型（适合下拉菜单内容固定，且个数有限）【基础内容】</strong></p><p>思路：中继器充当容器，鼠标点中中继器的某一个数据，赋值到下拉菜单栏的背景框。（系统也自带了同种类型的组件，但是中继器实现可以展示一些系统自带没有的效果）。</p><p><strong>①步骤分解</strong></p><ul><li>创建合适大小矩形、中继器（保证中继器宽与矩形宽度一致），方向箭头。</li><li>配置中继器内容，进行中继器的赋值（下拉菜单内容）。</li><li>配置中继器的鼠标单击事件。</li><li>调整隐藏/显示关系。</li></ul><p><strong>②教程</strong></p><ul><li>创建矩形200*40（尺寸后期可以根据需要调整，调整和中继器编辑页面的矩形宽度保持一致）。</li><li>创建中继器，双击中继器进入中继器编辑页面，在中继器编辑页面调整矩形尺寸为200*40。</li><li>进行中继器赋值操作。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230802.png" alt="创建中继器，进行赋值"></p><ul><li>进行鼠标点击事件。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230800.png" alt="配置鼠标点击事件"></p><ul><li>细节调整<br>给中继器编辑页面中的矩形设置选中状态变化。添加鼠标移入移除的的选中切换。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230808.png" alt="移入移除细节调整"></p><p>配置图标的旋转方向和中继器的显示和隐藏。</p><p>中继器在初始的状态下是隐藏的，点击下拉菜单的矩形，中继器显示。当用点击中继器内容时，完成第4步赋值操作后，隐藏中继器。</p><p>图标开始状态，方向朝上，点击下拉菜单的矩形，设置旋转图标。完成赋值后再次反方向旋转图标。</p><h4 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h4><p>滑动选择类型：</p><p><strong>①步骤分解</strong></p><ul><li>创建合适大小矩形、中继器（保证中继器宽与矩形宽度一致），方向箭头。</li><li>配置中继器内容，进行中继器的赋值（下拉菜单内容）</li><li><strong>配置中继器的显示区域–动态面板实现</strong></li><li>配置中继器的鼠标单击事件</li><li>调整隐藏/显示关系</li></ul><p><strong>②教程</strong></p><p>保持案例一的操作步骤不变，在将中继器内容转换为动态面板，调整动态面板的高度，设置动态面板的垂直滚动条。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230822.png" alt="滚动条展示"></p><p>案例后记：在显示隐藏的时候可以进行动态面板的显示隐藏替代中继器的显示隐藏（中继器相当于动态面板的子元素）</p><h4 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h4><p>翻页选择类型：</p><p><strong>①步骤分解</strong></p><ul><li>创建合适大小矩形、中继器（保证中继器宽与矩形宽度一致），方向箭头。</li><li>配置中继器内容，进行中继器的赋值（下拉菜单内容）。</li><li>配置中继器的显示区域–动态面板实现。</li><li><strong>添加中继器多页显示的每页显示行数，和初始的显示页数。</strong></li><li>配置中继器的鼠标单击事件。</li><li>调整隐藏/显示关系。</li></ul><p><strong>②教程</strong></p><p>保持案例二的操作步骤不变（要保持动态面板显示后，展示内容可以全部展示），设置中继器内容多页显示，添加上下翻页按钮。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230840.png" alt="上下翻页配置开启中继器的分页"></p><p>配置上下翻页事件：设置当前显示页面（以上一页举例）</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230859.png" alt="翻页上一页配置"></p><p>案例后记：也可以不使用动态面板。使用好处：可以将上下翻页按钮和中继器同时进行显示隐藏操作（只用设置动态面板的隐藏和显示）。如果不使用，要对三个组件进行显示隐藏的操作关联。</p><h4 id="案例四"><a href="#案例四" class="headerlink" title="案例四"></a>案例四</h4><p>添加模糊检索的下拉选择类型：</p><p><strong>①步骤分解</strong></p><ul><li>创建合适大小矩形、中继器（保证中继器宽与矩形宽度一致），方向箭头。</li><li>配置中继器内容，进行中继器的赋值（下拉菜单内容）。</li><li>配置中继器的显示区域–动态面板实现。</li><li>配置中继器的鼠标单击事件。</li><li>添加文本框输入，在文本框进行文字发生变化的时候匹配中继器中文字，从而达到赛选匹配的效果。</li><li><strong>采用[[Item.Column0.indexOf(word)&gt;-1]]的匹配原则。【个人理解：indexOf(word)是Axure中正则匹配的函数，在axure中，如果返回参数为-1，表示不存在。其他解释：indexOf(‘searchValue’,start) 用途：从左至右获取查询字符串在当前文本对象中首次出现的位置。未查询到时返回值为-1。 参数：searchValue为查询的字符串。】</strong></li><li>调整隐藏/显示关系</li></ul><p><strong>②教程</strong></p><p>在案例二的基础上添加文本框，进行文本框输入的判断匹配。（匹配过程：添加中继器筛选，条件为indexOf函数匹配唯一的中继器字段）。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230946.png" alt="关键词匹配"></p><p>其他：点击清除按钮给移除筛选，并且文本框赋值为空值，达到重置的效果。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605230943.png" alt="重置效果"></p><p>案例后记：<strong>indexOf函数可以配合中继器实现多种筛选，并且在表格等多种情况下适用。（“臣服”与中继器+函数的强大，哈哈）</strong></p><p>文章后记：之前一直文章中没有做文字的筛选模糊匹配，于是最近在看下拉菜单的多种样式，就尝试进行制作，函数+中继器可以实现–“真香系列”。</p><h3 id="文章重点"><a href="#文章重点" class="headerlink" title="文章重点"></a>文章重点</h3><p>indexOf函数的学习与使用。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在处理模糊匹配的时候可以采用indexOf函数。同时在制作时，要学会对应的元件库整理。此处的四个案例均可作为日产的元件库进行使用。</p>]]></content>
      
      
      <categories>
          
          <category> 中继器教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中继器 </tag>
            
            <tag> Axure </tag>
            
            <tag> 下拉菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【中继器系列教程】第一步：增、删、改、查的基础操作</title>
      <link href="/posts/853f2960.html"/>
      <url>/posts/853f2960.html</url>
      
        <content type="html"><![CDATA[<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ul><li>电脑：mac和win都可以（案例以win系统为例，mac类似）</li><li>软件：Axure 8系列（如需软件可以文章后面留言）</li><li>熟练程度：初级（会使用简单的元件即可）</li><li>相关使用元件：矩形、按钮、中继器、文本框，多行文本框、下拉列表框。</li></ul><h3 id="演示动画"><a href="#演示动画" class="headerlink" title="演示动画"></a>演示动画</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221856.gif" alt="演示Gif图"></p><h3 id="原型元件组成展示"><a href="#原型元件组成展示" class="headerlink" title="原型元件组成展示"></a>原型元件组成展示</h3><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605223815.png" alt="元件组成部分截图"></p><h3 id="正文（制作过程）"><a href="#正文（制作过程）" class="headerlink" title="正文（制作过程）"></a>正文（制作过程）</h3><h4 id="搭建初始静态界面"><a href="#搭建初始静态界面" class="headerlink" title="搭建初始静态界面"></a>搭建初始静态界面</h4><ul><li>在静态界面的搭建中会使用到前期准备中所提及的元件以及相关属性。这些都是比较基本的操作，就部一一解释了。搭建后的界面如下图，所用元件也做了详细命名处理，大家可以看命名后缀进行一些元件的区分。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221907.png" alt="搭建静态界面"></p><h4 id="中继器关联相关初始数据"><a href="#中继器关联相关初始数据" class="headerlink" title="中继器关联相关初始数据"></a>中继器关联相关初始数据</h4><ul><li>中继器的相关初始数据都可以在Axure中前期录入部分数据。录入数据后需要将数据与之前中继器中的文本进行绑定。（如果有些数据为相关同的数据，就可以不用关联，直接复用，具体可以自行查看中继器基础知识）。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221909.png" alt="中继器数据关联"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221914.png" alt="关联后效果展示"></p><h4 id="信息删除"><a href="#信息删除" class="headerlink" title="信息删除"></a>信息删除</h4><ul><li>这一步主要操作为信息的删除，主要以删除行为例。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221918.png" alt="行信息删除"></p><h4 id="信息增加"><a href="#信息增加" class="headerlink" title="信息增加"></a>信息增加</h4><ul><li>本步主要主要操作为信息的增加。 思路：初始加载隐藏弹框，在点击上部新增的时候进行弹框显示，输入相关信息，然后点击新增，信息添加入表格，弹框隐藏。 <ul><li>1、给弹框的【新增】按钮添加鼠标点击事件。</li><li>2、为行中的数据绑定输入源</li></ul></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221921.png" alt="新增按钮配置点击事件"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221923.png" alt="行添加数据"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221926.png" alt="添加姓名数据"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221929.png" alt="添加性别数据"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221931.png" alt="添加备注数据"></p><ul><li>优化数据添加逻辑—姓名不能为空 </li></ul><blockquote><p>思路：在新增按钮点击新增时判断姓名文本框中是否有字符的输入，如果没有就在姓名输入栏下显示【姓名不能为空】提示，如果有字符输入就直接添加成功，弹框隐藏。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221935.png" alt="添加姓名为空提示"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221938.png" alt="判断姓名不为空条件"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221941.png" alt="不为空隐藏提示"></p><ul><li>最后为【新增】【取消】添加隐藏时间（注意，新增的隐藏事件要添加到输入不为空的情况下）</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221944.png" alt="添加完成隐藏弹框"></p><ul><li>这些内部逻辑处理完成后，只需绑定弹框到顶部新增就行。 弹框隐藏，点击新增显示。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221947.png" alt="点击新增显示弹框"></p><h4 id="信息筛选"><a href="#信息筛选" class="headerlink" title="信息筛选"></a>信息筛选</h4><blockquote><p>思路：让下拉菜单中选中项作为条件，来协助筛选按钮的事件处理</p></blockquote><ul><li>性别-女</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221950.png" alt="添加条件为女"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221952.png" alt="新建筛选条件"></p><ul><li>性别-男</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221955.png" alt="添加条件为男"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605221958.png" alt="新建筛选条件"></p><ul><li>全选（取消筛选） 利用中继器的取消筛选。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222002.png" alt="移除所有筛选"></p><h4 id="信息修改"><a href="#信息修改" class="headerlink" title="信息修改"></a>信息修改</h4><blockquote><p>思路：首先找到中继器中对应的行，在点击编辑是获取数据于弹框之上，在弹框上修改之后，数据变动录入中继器表格中。</p></blockquote><h5 id="详细步骤一：点击编辑，获取中继器数据于弹框"><a href="#详细步骤一：点击编辑，获取中继器数据于弹框" class="headerlink" title="详细步骤一：点击编辑，获取中继器数据于弹框"></a>详细步骤一：点击编辑，获取中继器数据于弹框</h5><ul><li>在获取中继器数据于弹框的过程中，难点在于一个性别的数据转化，在表格中性别的数据为文本，但是在弹框中是下拉菜单。所以我们要有获取焦点，通过判断文本上的文字来转化数据为下拉的选项。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222006.png" alt=""></p><ul><li>鼠标点击时给“编辑”字符获取焦点</li><li>当“编辑”获取焦点时，显示弹框，调整动态面板为编辑，标记中继器当前行（让操作指导是那个行）。</li><li>给“性别”获取焦点，方便后期判断。</li><li>赋值给弹框上的‘姓名’、‘备注’。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222012.png" alt="编辑文字上的事件"></p><ul><li>“性别”获取焦点后，进行判断，具体事件如下。（这里就是通过判断条件给下拉框赋值）</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222015.png" alt="性别转换"></p><h5 id="详细步骤二：弹框上的数据回绑"><a href="#详细步骤二：弹框上的数据回绑" class="headerlink" title="详细步骤二：弹框上的数据回绑"></a>详细步骤二：弹框上的数据回绑</h5><blockquote><p>思路：在这里获取数据后进行回绑就是相当于更新中继器所选中的行。</p></blockquote><ul><li>判断姓名是否未空，为空就需要提示，具体可以参考上一篇文章。</li><li>姓名不为空，我们就需要更新数据，在中继器中有更新行的这个功能。选择这个功能进行数据的赋值。（这里是整个编辑的关键，大家一定要详细去处理。）</li><li>在整体的赋值中可以利用局部变量的方式去进行赋值的转移，例如：我在姓名中就给姓名赋值为name这个局部变量，然后通过中继器获取局部变量就可以进行数据的更新。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222018.png" alt="更新行事件"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222020.png" alt="获取编辑的姓名"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222022.png" alt="获取编辑的性别"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200605222024.png" alt="获取编辑的备注"></p><ul><li><p>最后一步，检查相关逻辑是否合理</p></li><li><ul><li>注意点1：在利用焦点时，获取焦点一定是一个先后顺序的。</li><li>注意点2：在赋值的时候一定要注意所选的元件是不是正确元件（元件命名很重要，很重要，很重要）。</li><li>注意点3：细心处理每个环节。 综上，中级器的增删改查教程更新完毕。</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1、命名：可以让自己更方便的区分组件，找到组件。</p><p>2、逻辑先后：在做原型之前，一定要想清楚逻辑，什么在前什么在后（包括判断条件）。</p><p>3、排版：尽可能的去做一些规范，在使用元件时大小、高度都有一些约束，这样排版就会相对美观些。</p>]]></content>
      
      
      <categories>
          
          <category> 中继器教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 中继器 </tag>
            
            <tag> Axure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常的踩坑指南</title>
      <link href="/posts/207dfa09.html"/>
      <url>/posts/207dfa09.html</url>
      
        <content type="html"><![CDATA[<h1 id="日常的踩坑指南"><a href="#日常的踩坑指南" class="headerlink" title="日常的踩坑指南"></a>日常的踩坑指南</h1><h2 id="链接的坑"><a href="#链接的坑" class="headerlink" title="链接的坑"></a>链接的坑</h2><p>在做项目模块中，添加了项目介绍，但是项目介绍的跳转始终出现无法跳转。</p><ul><li>报错问题：链接中出现  /%20</li><li>问题查找：/%20 代表空格符</li><li>问题解决：查找对应的数据文件projects.json。修改查看地址是否存在链接前方空格。</li><li>解决结果：的确在第一个链接的地址中存在空格，删除完空格，恢复正常。<br><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200524150259.png" alt="报错信息"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo踩坑笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目介绍通用</title>
      <link href="/posts/47179a24.html"/>
      <url>/posts/47179a24.html</url>
      
        <content type="html"><![CDATA[<p>项目文档暂未公开<br>项目相关文档还在脱敏整理中。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Remix SVG图标元件库使用说明书</title>
      <link href="/posts/b138b119.html"/>
      <url>/posts/b138b119.html</url>
      
        <content type="html"><![CDATA[<h1 id="元件库导入说明"><a href="#元件库导入说明" class="headerlink" title="元件库导入说明"></a>元件库导入说明</h1><h1 id="元件库导入说明-1"><a href="#元件库导入说明-1" class="headerlink" title="元件库导入说明"></a>元件库导入说明</h1><h2 id="Axure-8系列版本说明"><a href="#Axure-8系列版本说明" class="headerlink" title="Axure 8系列版本说明"></a>Axure 8系列版本说明</h2><h3 id="Axure-8-系列版本元件库导入"><a href="#Axure-8-系列版本元件库导入" class="headerlink" title="Axure 8 系列版本元件库导入"></a>Axure 8 系列版本元件库导入</h3><p>在Axure 8版本中，元件库的导入需要手动进行导入。</p><ul><li>第一步：确认将要导入的文件位置路径，例：E:\UEDART\图标 。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192248" alt="文件准备"> </p><ul><li>第二步：打开Axure，找到元件库模块的菜单栏。</li></ul><p>注：如果未找到元件库模块，可以通过：视图&gt;重置视图，进行恢复。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192252" alt="元件库模块"> </p><ul><li>第三步：在元件库模块的菜单栏，选择载入元件库。载入元件库会打开文件选择弹框，选择刚才准备好的元件库文件（路径如步骤一）。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192256" alt="选择载入元件库"> </p><ul><li>第四步：查看载入完成效果。载入完成后，Axure会自动加载载入的元件库。</li></ul><p>注：加载时间取决于元件库的大小，本次提供的全部SVG图标加载时间较长，在加载过程中请耐心等待。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192259" alt="导入效果"> </p><h3 id="Axure-8系列版本中元件库切换"><a href="#Axure-8系列版本中元件库切换" class="headerlink" title="Axure 8系列版本中元件库切换"></a>Axure 8系列版本中元件库切换</h3><p>在Axure 8中可以通过如图切换导入的元件库。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192304" alt="元件库切换"> </p><h2 id="Axure-9系列版本说明"><a href="#Axure-9系列版本说明" class="headerlink" title="Axure 9系列版本说明"></a>Axure 9系列版本说明</h2><h3 id="Axure-9-系列版本元件库导入"><a href="#Axure-9-系列版本元件库导入" class="headerlink" title="Axure 9 系列版本元件库导入"></a>Axure 9 系列版本元件库导入</h3><p>在Axure 9版本中，元件库可以通过双击进行打开导入。</p><ul><li>第一步：确认将要导入的文件位置路径，例：E:\UEDART\图标 。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192308" alt="文件位置"> </p><ul><li>第二步：点击需要导入的元件库进行打开，Axure 9会自动识别元件库组件，点击确认即可导入。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192312" alt="选择导入"> </p><ul><li>第三步：查看载入完成效果，载入完成后，Axure会自动加载载入的元件库。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192315" alt="效果"> </p><h3 id="Axure-9系列版本中元件库切换"><a href="#Axure-9系列版本中元件库切换" class="headerlink" title="Axure 9系列版本中元件库切换"></a>Axure 9系列版本中元件库切换</h3><p>在Axure 9中可以通过如图切换导入的元件库。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192319" alt="元件库切换"> </p><h1 id="元件库使用说明"><a href="#元件库使用说明" class="headerlink" title="元件库使用说明"></a>元件库使用说明</h1><h2 id="元件库使用详细说明"><a href="#元件库使用详细说明" class="headerlink" title="元件库使用详细说明"></a>元件库使用详细说明</h2><p>本套元件库采用SVG图标格式作为元件库的素材，使用方式介绍如下。</p><ul><li>第一步：选择需要的元件库，拖入画布。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192322" alt="拖入图标"> </p><ul><li>第二步：在样式栏，调整元件的宽高（注：建议采用锁定宽高比调整）。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192326" alt="大小尺寸调整"> </p><ul><li>第三步：调整宽高后，如需更改颜色，需将SVG转化为形状，然后在样式填充中选择需要的颜色即可。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192329" alt="转化为形状"> </p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200521192336" alt="图标样式颜色"></p>]]></content>
      
      
      <categories>
          
          <category> Axure作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axure 作品 </tag>
            
            <tag> Axure元件库 </tag>
            
            <tag> Remix SVG图标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博文头部部规范</title>
      <link href="/posts/f7cdad1d.html"/>
      <url>/posts/f7cdad1d.html</url>
      
        <content type="html"><![CDATA[<h2 id="关键词说明注释"><a href="#关键词说明注释" class="headerlink" title="关键词说明注释"></a>关键词说明注释</h2><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><h2 id="案例模版"><a href="#案例模版" class="headerlink" title="案例模版"></a>案例模版</h2><pre><code>title: 博文头部部规范author: PMYXtop: falsecover: falsecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: truemathjax: falsesummary: 构建文章MD的标题中设置字段categories: 规范tags:  - 博客规范  - 规范abbrlink: f7cdad1ddate: 2020-05-18 23:43:51keywords: 规范img:</code></pre>]]></content>
      
      
      <categories>
          
          <category> 规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客规范 </tag>
            
            <tag> 规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github 代码同步命令行</title>
      <link href="/posts/a16b2754.html"/>
      <url>/posts/a16b2754.html</url>
      
        <content type="html"><![CDATA[<ul><li><p>提交全部变更<br>git add .</p></li><li><p>新增提交备注<br>git commit -m “cc”</p></li></ul><p>注：cc本次提交代码备注</p><ul><li><p>推送<br>git push</p></li><li><p>本地回退版本<br>git reset –hard（回退多个版本： git reset –hard ^）</p></li></ul><ul><li><p>仓库覆盖本地<br>git pull origin master</p></li><li><p>创建本地分支<br>git branch  分支名</p></li><li><p>切换分支<br>git checkout  分支名<br>   master<br>   dev</p></li><li><p>远程分支同步<br>git push origin 分支名</p></li><li><p>删除远程分支<br>git push origin：develop</p></li><li><p>远程分支合并至主分支</p><ul><li>git branch -a      #先查看下当前的本地和远程分支</li><li>git checkout  dev           # 切换至文件存在的分支(进行相关文件同步等)<ul><li>git add .</li><li>git commit -m “11”</li><li>git push origin dev</li></ul></li><li>git checkout master  切换主分支</li><li>git merge my_dev     同步完成后，切换至主分支，执行代码合并</li><li>git push origin master    推送主分支</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axure的安装</title>
      <link href="/posts/578d7aa9.html"/>
      <url>/posts/578d7aa9.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.yuque.com/pmyx/axure/uufwwo#KOixE" target="_blank" rel="noopener">下载安装视频剪辑.mp4</a></p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><h3 id="渠道：官网下载（www-axure-com）"><a href="#渠道：官网下载（www-axure-com）" class="headerlink" title="渠道：官网下载（www.axure.com）"></a>渠道：官网下载（<a href="http://www.axure.com）" target="_blank" rel="noopener">www.axure.com）</a></h3><ul><li>打开官网，点击Download按钮进行下载界面。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/151380/1580180394614-560a0847-f8b3-49f9-ab82-7515be62b653.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_UE1ZWOWHuuWTgSAtIEF4dXJlIDk%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10%2Fresize%2Cw_1500" alt="image.png"></p><ul><li><p>选择对应的操作系统下载对应的安装程序。</p></li><li><ul><li>win系统下载文件为.exe文件。</li><li>mac系统下载文件为.dmg文件。</li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/151380/1580181077247-e3bb6093-4484-49f5-af0d-5e6f43b1adcb.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_UE1ZWOWHuuWTgSAtIEF4dXJlIDk%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10%2Fresize%2Cw_1500" alt="image.png"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="WIN安装"><a href="#WIN安装" class="headerlink" title="WIN安装"></a>WIN安装</h2><ul><li><p>双击已下载完成的.exe的文件安装包。</p></li><li><p>点Next（下一步）。</p></li><li><p>勾选同意协议，点击Next（下一步）。</p></li><li><p>选择安装位置，点击Next（下一步），系统就进行了软件安装。</p></li><li><ul><li>注1：安装位置系统默认为C盘，Axure 9 支持更改安装位置。</li><li>注2：由于Axure 9 官方暂无中文版本，但小楼老师提供了汉化文件，于是Axure 9汉化需进行部分文件的替换，所有安装时需记录文件的安装位置（尤其是更改安装位置后的新的安装位置）。</li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/151380/1579070460586-300ff4d2-e5f2-4d61-b344-d4472b7330f6.png" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/151380/1579070484459-6c07462d-a280-479e-9129-2beac2d1a922.png" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/151380/1579070499398-dc117fcc-1fc6-4f90-a762-7f05457ec0f8.png" alt="image.png"></p><h2 id="MAC安装"><a href="#MAC安装" class="headerlink" title="MAC安装"></a>MAC安装</h2><ul><li>双击已下载完成的.dmg的文件安装包。</li><li>拖动图标至安装。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Axure 9 专栏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axure 9 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客--Hexo基础</title>
      <link href="/posts/55752e63.html"/>
      <url>/posts/55752e63.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建博客–Hexo基础"><a href="#搭建博客–Hexo基础" class="headerlink" title="搭建博客–Hexo基础"></a>搭建博客–Hexo基础</h1><h2 id="基础代码克隆"><a href="#基础代码克隆" class="headerlink" title="基础代码克隆"></a>基础代码克隆</h2><ul><li>创建文件夹，命名为blog（放在一个不易删除的地方）。</li><li>用VS Code 打开创建的blog文件夹。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512230956" alt="VS Code 打开文件夹"></p><ul><li>用VS Code 中选择打开新终端。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231003" alt="新终端"></p><ul><li>在终端中输入：npm install hexo-cli -g  等待加载完成。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231006" alt="加载对应代码文件"></p><ul><li>加载完成后，在终端中输入：hexo init blog   创建blog子文件夹，创建完成后，左侧目录下就会生成blog的文件夹（可能有点慢，稍微等待下）。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231009" alt="加载对应代码文件"></p><ul><li><p>然后终端中输入：cd blog 进入刚创建的目录。</p></li><li><p>再输入：npm install 等待加载完成。<br><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231012" alt="进入文件夹"></p></li><li><p>一切就绪输入：hexo server 就可在本地浏览器查看搭建的博客了（鼠标点击图中标记的地址）。</p></li></ul><blockquote><p>注：hexo server  缩写：hexo s。按住Ctrl+C可以推出本地预览。</p></blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231015" alt="生成"></p><h2 id="第一篇文章编写hexo"><a href="#第一篇文章编写hexo" class="headerlink" title="第一篇文章编写hexo"></a>第一篇文章编写hexo</h2><ul><li>编写第一篇博客，在终端中输入：hexo new “one”，系统会自动生成一篇博客。可以在如图目录下查看，并进行编辑，保存。再次执行：hexo s，在浏览器中预览。</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231018" alt="one"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231021" alt="生成"></p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200512231024" alt="预览"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo踩坑笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客--安装基础软件</title>
      <link href="/posts/b4e4a5e5.html"/>
      <url>/posts/b4e4a5e5.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建博客–安装基础软件"><a href="#搭建博客–安装基础软件" class="headerlink" title="搭建博客–安装基础软件"></a>搭建博客–安装基础软件</h1><h2 id="安装git："><a href="#安装git：" class="headerlink" title="安装git："></a>安装git：</h2><ul><li><p>Git（读音为/gɪt/）是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p></li><li><p>下载地址;<a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a></p></li><li><p>其实还有更简单的办法，电脑上安装了腾讯电脑管家，可以在软件管理中进行下载。（虽然大家都在吐槽电脑管家，360等让电脑越来越卡。其实不用的时候，将自启动禁用就行，下载软件，清理缓存垃圾时打开）。</p></li></ul><blockquote><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200511205752.png" alt="电脑管家中搜索下载"></p></blockquote><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><ul><li><p>下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p></li><li><p>同样可以在电脑管家中下载。</p></li></ul><blockquote><p>注：Git和Node.js是一切开始的基础，安装完成后可以在电脑中查看是否安装成功。</p><p>方法：node.js 检查方法在命令行中输入</p><p>node - v</p><p>展示效果：出现版本号为安装成功。</p><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200511211421.png" alt="cmd中版本号查看"></p></blockquote><h2 id="安装-VS-code"><a href="#安装-VS-code" class="headerlink" title="安装 VS code"></a>安装 VS code</h2><ul><li>官网：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200511211618.png" alt="官网截图"></p><ul><li>安装完成后，如果需要切换语言，请安装中文包的组件</li></ul><p><img src="https://image-1252878857.cos.ap-chengdu.myqcloud.com/image20200511212559.png" alt="中文语言包"></p><blockquote><p>基础工作完成，下一节我们开始正式博客搭建</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo踩坑笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> node.js </tag>
            
            <tag> vs code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客--方案选型</title>
      <link href="/posts/95f626fe.html"/>
      <url>/posts/95f626fe.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建博客–方案选型"><a href="#搭建博客–方案选型" class="headerlink" title="搭建博客–方案选型"></a>搭建博客–方案选型</h1><h2 id="搭博客平台的历程"><a href="#搭博客平台的历程" class="headerlink" title="搭博客平台的历程"></a>搭博客平台的历程</h2><p>1、尝试过购买服务器（WordPress搭建）–服务器太贵，学生机时代还可以承受，后面…..。</p><p>2、Axure静态原型搭建，托管Github（访问太慢放弃）。转战对象云存储（OSS、COS），但是每次更新都需要编辑Axure原型。感觉其它页面还可以，就是博文只能跳第三方平台链接，体验不是很好。</p><p>现有的访问网址：<a href="http://sjjhyz.club" target="_blank" rel="noopener">Axure托管腾讯云COS的老官网</a></p><p>3、“潜心研究”在半天内搭建了现在的新的博客网站。<a href="http://pmyx.top/">这里是新的博客官网–PMYX</a></p><ul><li>优点：<ul><li>价格便宜，基本上每个月不到1元费用（COS的存储费用和流量费用）。</li><li>访问速度还可以，目前没有开通CDN。</li><li>编辑简单,Markdown形式，同时可以借助自己之前用语雀进行内容同步。</li></ul></li></ul><h2 id="整体方案"><a href="#整体方案" class="headerlink" title="整体方案"></a>整体方案</h2><blockquote><p>Hexo（技术栈）+Matery（博客主题）+COS（托管平台）+typora（Markdown编辑器）+picgo（图床上传工具）的静态博客白嫖方案</p></blockquote><h3 id="Hexo：快速、简洁且高效的博客框架"><a href="#Hexo：快速、简洁且高效的博客框架" class="headerlink" title="Hexo：快速、简洁且高效的博客框架"></a>Hexo：快速、简洁且高效的博客框架</h3><p>官网：<a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></p><ul><li>优点：（来源官网）<ul><li><strong>超快速度：</strong>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li><strong>支持 Markdown：</strong>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li><li><strong>一键部署：</strong>只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</li><li><strong>插件和可扩展性：</strong>强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</li></ul></li><li>自己总结一下<ul><li>使用方便、主题较多、文档相对完善(像我这种“新手”)。</li><li>插件多是真个，优秀的插件可以去参考，然后扩展功能（给有梦想的人，我就乖乖的用个主题吧，主题打包好的”真香“）。</li></ul></li></ul><h3 id="Matery：一款优秀的Hexo的博客主题"><a href="#Matery：一款优秀的Hexo的博客主题" class="headerlink" title="Matery：一款优秀的Hexo的博客主题"></a>Matery：一款优秀的Hexo的博客主题</h3><p>Github地址：<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">https://github.com/blinkfox/hexo-theme-matery</a></p><ul><li>优点就不多说了，功能比较，个人日常使用完全无压力。最重要的是主题的文档写的比较完整比较全。</li></ul><h3 id="COS：腾讯云的对象云存储"><a href="#COS：腾讯云的对象云存储" class="headerlink" title="COS：腾讯云的对象云存储"></a>COS：腾讯云的对象云存储</h3><h3 id="Typora：-一款Markdown编译器，可以结合PIcGo图床使用。"><a href="#Typora：-一款Markdown编译器，可以结合PIcGo图床使用。" class="headerlink" title="Typora： 一款Markdown编译器，可以结合PIcGo图床使用。"></a>Typora： 一款Markdown编译器，可以结合PIcGo图床使用。</h3><p>typora官网：<a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a></p><h3 id="PIcGo：一款开源图传工具，多平台支持"><a href="#PIcGo：一款开源图传工具，多平台支持" class="headerlink" title="PIcGo：一款开源图传工具，多平台支持"></a>PIcGo：一款开源图传工具，多平台支持</h3><p>Github地址：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo</a></p><h3 id="其他：Github（我在Github上也托管了一份），VS-Code（编译器）"><a href="#其他：Github（我在Github上也托管了一份），VS-Code（编译器）" class="headerlink" title="其他：Github（我在Github上也托管了一份），VS Code（编译器）"></a>其他：Github（我在Github上也托管了一份），VS Code（编译器）</h3>]]></content>
      
      
      <categories>
          
          <category> Hexo踩坑笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
